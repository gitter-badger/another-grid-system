@import "compass"

/// Small screen / phone
$screen-phone-min: 320px !default
$screen-phone-max: $screen-phone-min - 1 !default

/// Small screen / tablet
$screen-tablet-min: 768px !default
$screen-tablet-max: $screen-tablet-min - 1 !default

/// Medium screen / desktop
$screen-desktop-min: 1024px !default
$screen-desktop-max: $screen-desktop-min - 1 !default

/// Large screen / wide desktop
$screen-monitor-min: 1280px !default
$screen-monitor-max: $screen-monitor-min - 1 !default

// Mapas para sistemas de grids e afins
$breakpoints-map-min: (	phone: $screen-phone-min, tablet: $screen-tablet-min, desktop: $screen-desktop-min, monitor: $screen-monitor-min)
$breakpoints-map-max: (	phone: $screen-phone-max, tablet: $screen-tablet-max, desktop: $screen-desktop-max, monitor: $screen-monitor-max)

$grid-number-of-columns: 12 !default

@mixin m-generate-column($column-width) 
	position: relative
	min-height: 1px
	width: $column-width
	float: left

@mixin m-generate-offset($offset-width) 
	position: relative
	min-height: 1px
	margin-left: $column-width
	float: left

.row 
	@include clearfix()
	@include box-sizing(border-box)	

*[class^='col-'],
*[class*=' col-'] 
	@include box-sizing(border-box)
	&:before, 
	&:after 		
		@include box-sizing(border-box)
		
@each $breakpoint-name, $breakpoint-value in $breakpoints-map-min 
	@for $i from 1 through $grid-number-of-columns 
		@media (min-width: $breakpoint-value) 
			.col-#{$breakpoint-name}-#{$i} 
				@include m-generate-column(#{(100% / $grid-number-of-columns) * $i})			
			
			.col-offset-#{$breakpoint-name}-#{$i} 
				@include m-generate-column(#{(100% / $grid-number-of-columns) * $i})			
			
@for $i from 1 through $grid-number-of-columns 
	.col-#{$i} 
		@include m-generate-column(#{(100% / $grid-number-of-columns) * $i})
		
$spacings: 10px 20px 30px 40px
$spacing-directions: top right bottom left

@for $i from 1 through length($spacings) 
	@each $spacing-direction in $spacing-directions 		
		.p-margin-#{$spacing-direction}-#{$i} 
			margin-#{$spacing-direction}: nth($spacings, $i) !important
		
		.p-padding-#{$spacing-direction}-#{$i} 
			padding-#{$spacing-direction}: nth($spacings, $i) !important		

		.p-margin-horizontal-#{$i} 
			margin-left: nth($spacings, $i) !important
			margin-right: nth($spacings, $i) !important

		.p-padding-horizontal-#{$i} 
			padding-left: nth($spacings, $i) !important
			padding-right: nth($spacings, $i) !important

		.p-margin-vertical-#{$i} 
			margin-top: nth($spacings, $i) !important
			margin-bottom: nth($spacings, $i) !important

		.p-padding-vertical-#{$i} 
			padding-top: nth($spacings, $i) !important
			padding-bottom: nth($spacings, $i) !important
		
		.p-padding-#{$i} 
			padding: nth($spacings, $i) !important
		
		.p-margin-#{$i} 
			margin: nth($spacings, $i) !important
				
@function spacing($spacing-index) 
	@return nth($spacings, $spacing-index)

///
*[class^='col-'],
*[class*=' col-']
	background-color: pink